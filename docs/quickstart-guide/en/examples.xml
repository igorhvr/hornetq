<?xml version="1.0" encoding="UTF-8"?>
<!-- ============================================================================= -->
<!-- Copyright © 2009 Red Hat, Inc. and others.                                    -->
<!--                                                                               -->
<!-- The text of and illustrations in this document are licensed by Red Hat under  -->
<!-- a Creative Commons Attribution–Share Alike 3.0 Unported license ("CC-BY-SA"). -->
<!--                                                                               -->
<!-- An explanation of CC-BY-SA is available at                                    -->
<!--                                                                               -->
<!--            http://creativecommons.org/licenses/by-sa/3.0/.                    -->
<!--                                                                               -->
<!-- In accordance with CC-BY-SA, if you distribute this document or an adaptation -->
<!-- of it, you must provide the URL for the original version.                     -->
<!--                                                                               -->
<!-- Red Hat, as the licensor of this document, waives the right to enforce,       -->
<!-- and agrees not to assert, Section 4d of CC-BY-SA to the fullest extent        -->
<!-- permitted by applicable law.                                                  -->
<!-- ============================================================================= -->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "HornetQ_QuickStart_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="examples">
   <title>Running the Examples</title>
   <para>In the directory <literal>examples</literal> there are 2 sets of examples, these are </para>
   <itemizedlist>
      <listitem>
         <para>JMS Examples - these demonstrate functionality while sending and consumng JMS
            messages.</para>
      </listitem>
      <listitem>
         <para>Java EE Examples - these demonstrate application server integration, e.g. MDBs, EJBs,
            Servlets, etc.</para>
      </listitem>
   </itemizedlist>
   <section id="examples.jms">
      <title>The JMS examples</title>
      <para>The JMS Examples all follow the same format. Each examples is contained in its own
         directory which contains the following.</para>
      <itemizedlist>
         <listitem>
            <para><literal>build.xml</literal></para>
            <para>This is the ant build file used to run the example</para>
         </listitem>
         <listitem>
            <para><literal>src</literal> directory</para>
            <para>This contains the source code for the example</para>
         </listitem>
         <listitem>
            <para><literal>server0</literal> configuration directory</para>
            <para>This contains the configuration files needed to run the server for the example.
               There may be multiple configuration directories <literal>server0</literal>, <literal
                  >server1</literal> etc for clustered examples etc.</para>
         </listitem>
      </itemizedlist>
      <para>Each example will start one or more stand-alone servers and stop them after the example
         has completed.</para>
      <para>As a quick start we'll run the queue example. For all other examples refer to the main
         user manual.</para>
      <para>Firstly open a Shell or a Command prompt and navigate to the <literal
            >examples/jms/queue</literal> directory.</para>
      <para>Type the command <literal>./build.sh</literal> (or <literal>build.bat</literal> if you
         are running on Windows), and you should see the following output:</para>
      <programlisting>Buildfile: build.xml

run:

init:

compile:
     [echo] src.example.dir=/home/andy/projects/hornetq/trunk/examples/jms/queue/src
    [javac] Compiling 5 source files to /home/andy/projects/hornetq/trunk/examples/jms/queue
/build/classes

runExample:
     [java] 10:41:04,149 INFO  @main [JMSExample] hornetq.example.runServer is true
     [java] 10:41:04,149 INFO  @main [JMSExample] starting server with config 'server0'
 logServerOutput true
     [java] 10:41:04,149 INFO  @main [JMSExample] and vm args: -Xms512M,-Xmx512M,-XX:+U
seParallelGC,-XX:+AggressiveOpts,-XX:+UseFastAccessorMethods,-Djava.util.logging.config.
file=/home/andy/projects/hornetq/trunk/examples/jms/common/../../../src/config/stand-alone/no
n-clustered/logging.properties
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:08,437 INFO  @main [Journal
StorageManager] AIO journal selected
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:08,437 WARN  @main [Journal
StorageManager] AIO wasn't located on this platform, it will fall back to using pure Jav
a NIO. If your platform is Linux, install LibAIO to enable the AIO journal
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:08,437 WARN  @main [Securit
yStoreImpl] It has been detected that the cluster admin password which is used to replic
ate management operation from one node to the other has not had its password changed fro
m the installation default. Please see the HornetQ user guide for instructions o
n how to do this.
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:10,941 INFO  @main [HornetQCo
nnectionFactory] read only is false
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:10,941 INFO  @main [HornetQCo
nnectionFactory] read only is false
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:10,941 INFO  @main [HornetQCo
nnectionFactory] read only is false
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:10,991 WARN  @main [JMSServ
erManagerImpl] Binding for java:/ConnectionFactory already exists
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:10,991 WARN  @main [JMSServ
erManagerImpl] Binding for java:/XAConnectionFactory already exists
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:11,241 INFO  @main [Messagi
ngServerImpl] HornetQ Server version 2.0.0.BETA5 (buzz-buzz, 107) started
     [java] org.hornetq.jms.example.SpawnedJMSServer out:10:41:11,241 INFO  @main [HornetQBoot
strapServer] HornetQ server started
     [java] org.hornetq.jms.example.SpawnedJMSServer out:STARTED::
     [java] 10:41:11,276 INFO  @main [JMSExample] using server0/client-jndi.properties f
or jndi
     [java] Sent message: This is a text message
     [java] Received message: This is a text message
     [java] 
     [java] #####################
     [java] ###    SUCCESS!   ###
     [java] #####################

BUILD SUCCESSFUL
Total time: 13 seconds
</programlisting>
      <para>Congratulations! You have successfully run your first HornetQ example. Try some of the
         others.</para>
   </section>
   <section id="examples.messaging">
      <title>The Java EE Examples</title>
      <para>The Java EE Examples are examples that require a JEE application server to run. They
         include MDB, Servlet, EJB examples etc. For this you will need the JBoss Application Server
         installed. How to do this is explained in the previous chapters.</para>
      <para>We'll use the MDB example for the purposes of this guide. For the other examples refer
         to the user guide. Before going any further ensure that the JBoss Application Server is
         running.</para>
      <para>Like the other Java EE examples the MDB example is a JEE Application which first needs
         deploying in the JBoss Application Server. The first thing we need to do is set the
            <literal>JBOSS_HOME</literal> environment property to the location of the JBoss
         Application Server, in a Linux shell this would be something like:</para>
      <programlisting>export JBOSS_HOME=/home/jbossas5.1/build/output/jboss-5.1.0.GA</programlisting>
      <para>Once set we can then deploy the application, from inside the <literal
            >examples/javaee/mdb</literal> directory run the command:</para>
      <programlisting>./build.sh deploy</programlisting>
      <para>This will make a copy of the messaging profile in the JBoss Application server and start
         the server.</para>
      <para>In the shell window you should see something like the following output:</para>
      <programlisting>Buildfile: build.xml

validate-jboss:

deploy:

deploy-resources:
     [copy] Copying 1 file to /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
     /server/default-with-hornetq/deploy/hornetq.sar
     [copy] Copying 1 file to /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
     /server/default-with-hornetq/deploy/hornetq.sar

init:

compile:

jar:
      [jar] Building jar: /home/andy/projects/hornetq/trunk/examples/javaee/mdb/build/mdb-exa
      mple.jar

ear:
      [jar] Building jar: /home/andy/projects/hornetq/trunk/examples/javaee/mdb/build/mdb-exa
      mple.ear

deploy-ear:
     [copy] Copying 1 file to /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA

     .......


     [exec] 16:01:04,607 INFO  [JBossASKernel] 	Class:javax.jms.MessageListener
     [exec] 16:01:04,607 INFO  [JBossASKernel] Added bean(jboss.j2ee:ear=mdb-example.ear,
     jar=mdb-example.jar,name=MessageMDBExample,service=EJB3) to KernelDeployment of: 
     mdb-example.jar
     [exec] 16:01:04,702 INFO  [EJBContainer] STARTED EJB: org.hornetq.javaee.example.server
     .MDBExample ejbName: MessageMDBExample
     [exec] 16:01:09,496 INFO  [TomcatDeployment] deploy, ctxPath=/mdb-example
     [exec] 16:01:09,812 WARNING [config] Unable to process deployment descriptor for cont
     ext '/mdb-example'
     [exec] 16:01:09,812 INFO  [config] Initializing Mojarra (1.2_12-b01-FCS) for context 
     '/mdb-example'
     [exec] 16:01:09,958 INFO  [Http11Protocol] Starting Coyote HTTP/1.1 on http-127.0.0.1-
     8080
     [exec] 16:01:09,990 INFO  [AjpProtocol] Starting Coyote AJP/1.3 on ajp-127.0.0.1-8009
     [exec] 16:01:10,001 INFO  [ServerImpl] JBoss (Microcontainer) [5.1.0.GA (build: SVNTag
     =JBoss_5_1_0_GA date=200905151005)] Started in 6m:21s:797ms

</programlisting>
      <para>We can now run the example, do this by running the following command from within the
            <literal>mdb</literal> directory.</para>
      <programlisting>./build.sh</programlisting>
      <para>You should see some output similar to the following:</para>
      <programlisting>Buildfile: build.xml

run:

init:

compile:

runExample:
     [java] Sent message: This is a text message

BUILD SUCCESSFUL
Total time: 7 seconds</programlisting>
      <para>You may also see some output from the JBoss Application Server, in this instance it
         is:</para>
      <programlisting>16:27:54,703 INFO  [STDOUT] message This is a text message received</programlisting>
      <para>The application can then be undeployed by running the following command from within the
            <literal>mdb</literal> directory.</para>
      <programlisting>./build.sh undeploy</programlisting>
      <para>This should so some output similar to the following:</para>
      <programlisting>Buildfile: build.xml

validate-jboss:

undeploy:

undeploy-misc:
   [delete] Deleting: /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
   /server/default-with-hornetq/deploy/mdb-example.ear
   [delete] Deleting: /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
   /server/default-with-hornetq/deploy/hornetq.sar/hornetq-queues.xml
   [delete] Deleting: /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
   /server/default-with-hornetq/deploy/hornetq.sar/hornetq-jms.xml

BUILD SUCCESSFUL
Total time: 1 second
</programlisting>
      <para>You can verify that the application has been undeployed by checking the output from the
         JBoss Application Server, in this instance it will be something like:</para>
      <programlisting>16:36:45,277 INFO  [EJBContainer] STOPPED EJB: org.jboss.javaee.example.server.MDBExample 
         ejbName: MessageMDBExample
</programlisting>
      <para>Congratulations! you have successfully deployed and run a Java EE example.</para>
   </section>
</chapter>
