<?xml version="1.0" encoding="UTF-8"?>

<!-- ============================================================================= -->
<!-- Copyright © 2009 Red Hat, Inc. and others.                                    -->
<!--                                                                               -->
<!-- The text of and illustrations in this document are licensed by Red Hat under  -->
<!-- a Creative Commons Attribution–Share Alike 3.0 Unported license ("CC-BY-SA"). -->
<!--                                                                               -->
<!-- An explanation of CC-BY-SA is available at                                    -->
<!--                                                                               -->
<!--            http://creativecommons.org/licenses/by-sa/3.0/.                    -->
<!--                                                                               -->
<!-- In accordance with CC-BY-SA, if you distribute this document or an adaptation -->
<!-- of it, you must provide the URL for the original version.                     -->
<!--                                                                               -->
<!-- Red Hat, as the licensor of this document, waives the right to enforce,       -->
<!-- and agrees not to assert, Section 4d of CC-BY-SA to the fullest extent        -->
<!-- permitted by applicable law.                                                  -->
<!-- ============================================================================= -->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "HornetQ_User_Manual.ent">
%BOOK_ENTITIES;
]>

<chapter id="intercepting-operations">
   <title>Intercepting Operations</title>
   <para>HornetQ supports <emphasis>interceptors</emphasis> to intercept packets entering
       the server. Any supplied interceptors would be called for any packet entering 
        the server, this allows custom code to be executed, e.g. for auditing packets,
      filtering or other reasons. Interceptors can change the packets they intercept.</para>
   <section>
      <title>Implementing The Interceptors</title>
      <para>A interceptor must implement the <literal>Interceptor interface</literal>:</para>
      <programlisting>
package org.hornetq.api.core.interceptor;

public interface Interceptor
{   
   boolean intercept(Packet packet, RemotingConnection connection) 
                throws HornetQException;
}
         </programlisting>
      <para>The returned boolean value is important:</para>
      <itemizedlist>
         <listitem>
            <para>if <literal>true</literal> is returned, the process continues normally</para>
         </listitem>
         <listitem>
            <para>if <literal>false</literal> is returned, the process is aborted, no other
               interceptors will be called and the packet will not be handled by the server at
               all.</para>
         </listitem>
      </itemizedlist>
   </section>
   <section>
      <title>Configuring The Interceptors</title>
      <para>The interceptors are configured in <literal>hornetq-configuration.xml</literal>:</para>
      <programlisting>
&lt;remoting-interceptors&gt;
   &lt;class-name&gt;org.hornetq.jms.example.LoginInterceptor&lt;/class-name&gt;
   &lt;class-name&gt;org.hornetq.jms.example.AdditionalPropertyInterceptor&lt;/class-name&gt;
&lt;/remoting-interceptors&gt;
         </programlisting>
      <para>The interceptors classes (and their dependencies) must be added to the server classpath
         to be properly instantiated and called.</para>
   </section>
   <section>
      <title>Interceptors on the Client Side</title>
      <para>The interceptors can also be run on the client side to intercept packets
         <emphasis>sent by the server</emphasis> by adding the interceptor to the <code>ClientSessionFactory</code>
         with the <code>addInterceptor()</code> method.</para>
      <para>The interceptors classes (and their dependencies) must be added to the client classpath
         to be properly instantiated and called from the client side.</para>
   </section>
   <section>
      <title>Example</title>
      <para>See <xref linkend="examples.interceptor" /> for an example which
         shows how to use interceptors to add properties to a message on the server.</para>
   </section>
</chapter>
